@using NineMuses.ViewModels
@model ProfileViewModel
@{
    ViewBag.Title = "Profile";
}

<h2>This is @(Model.User.Username)'s Profile page</h2>

<div class="profile-container">
    <i class="fas fa-user fa-10x mar-5-r"></i>
    <br>
    <br>
    <p>Username: @Model.User.Username</p>
</div>

<div class="profile-container">
    @if (Convert.ToInt64(Session["UserID"]) == Model.User.UserID)
    {
        <h3>Change Password</h3>
        using (Html.BeginForm("UpdatePassword", "User", FormMethod.Post, new { id = "UpdatePasswordForm" }))
        {
            @Html.AntiForgeryToken()
            @Html.HiddenFor(m => m.User.Username, new { value = Model.User.Username })
            <div class="container-row mar-10-t">
                <div class="container-column">
                    @Html.TextBoxFor(m => m.Password, new { placeholder = "Password", type = "password", id = "password", required = "required" })
                </div>
            </div>
            <div class="container-row mar-10-t">
                <div class="container-column">
                    @Html.TextBoxFor(m => m.PasswordConfirm, new { placeholder = "Retype Password", type = "password", required = "required" })
                </div>
            </div>
            //<div class="form-row error mar-20-t">
            @Html.ValidationSummary("", new { @class = "ErrorText" })
            //</div>

            <div class="container-row mar-20-t">
                <div class="container-column">
                    <input type="submit" value="Submit" />
                </div>
            </div>
        }
        if (TempData["Message"] != null)
        {
            <p>
                <script>alert("\nPassword was successfully changed!");</script>
            </p>
        }


        using (Html.BeginForm("SignOut", "User", FormMethod.Post))
        {
            @Html.HiddenFor(m => m.User.Username, new { value = Model.User.Username })
            <div class="container-row mar-10-t">
                    <button class="button">Sign Out</button>
            </div>
        }
    }
</div>

    <h3 class="gridbox-title">Videos from @Model.User.Username</h3>
    <div class="gridbox big">
        @foreach (var model in Model.Videos)
        {
            <a href="@Url.Action("View", "Video", new { id = model.VideoID })">
                <div class="grid-item">
                    <img src="@(model.Thumbnail)" class="video-thumbnail" />
                    <h1 class="video-title ellipsis">@(model.Title)<br /></h1>
                </div>
                </a>
         }

        </div>


